package backend

import (
	"encoding/json"
	"net/http"
	"strconv"
	"strings"

	"github.com/PuerkitoBio/goquery"
	"github.com/nahidhasan98/ajudge/errorhandling"
	"github.com/nahidhasan98/ajudge/model"
	"github.com/nahidhasan98/ajudge/oj/uri"
	"github.com/nahidhasan98/ajudge/oj/vjudge"
)

//GetLanguage function for grabbing language suported when submitting problem solution
func GetLanguage(w http.ResponseWriter, r *http.Request) {
	OJList := r.URL.Query()["OJ"]
	pNumList := r.URL.Query()["pNum"]

	var OJ, pNum string
	if len(OJList) > 0 {
		OJ = OJList[0]
	}
	if len(pNumList) > 0 {
		pNum = pNumList[0]
	}
	//got OJ & pNum

	//variable for returning data
	model.LanguagePack = make(map[string]string) //already declared in readyVar.go. Here clearing/resetting the value

	//first collecting language list for this OJ_problem from the website directly
	if OJ == "URI" {
		apiURL := "https://www.urionlinejudge.com.br/judge/en/problems/view/" + pNum
		response := uri.GETRequest(apiURL)
		defer response.Body.Close()

		document, err := goquery.NewDocumentFromReader(response.Body)
		errorhandling.Check(err)

		langText := document.Find("select[id='language-id']").Text()
		langText = `[` + langText + `]`
		langText = strings.ReplaceAll(langText, `}{`, `},{`)

		type Lang struct {
			LValue int    `json:"id"`
			LName  string `json:"full_name"`
		}
		var language []Lang
		json.Unmarshal([]byte(langText), &language) //extracting the json file

		if len(language) > 0 {
			for k := 0; k < len(language); k++ {
				key := strconv.Itoa(language[k].LValue)

				value := strings.TrimSuffix(language[k].LName, ` {beta}`)
				value = strings.ReplaceAll(value, `s]`, `s for timelimit]`)
				model.LanguagePack[key] = value
			}
			w.Header().Set("Content-Type", "application/json")
			b, _ := json.Marshal(model.LanguagePack)
			w.Write(b)
			return
		}
	}
	if OJ != "DimikOJ" && OJ != "Toph" && OJ != "URI" { //searching to VJudge
		apiURL := "https://vjudge.net/problem/" + OJ + "-" + pNum
		response := vjudge.GETRequest(apiURL)
		defer response.Body.Close()

		document, err := goquery.NewDocumentFromReader(response.Body)
		errorhandling.Check(err)

		langText := document.Find("textarea[name='dataJson']").Text()

		type Lang struct {
			Lang map[string]string `json:"languages"`
		}
		var language Lang
		json.Unmarshal([]byte(langText), &language) //extracting the json file

		if len(language.Lang) > 0 {
			for key, value := range language.Lang { //map iteration
				model.LanguagePack[key] = value
			}
			w.Header().Set("Content-Type", "application/json")
			b, _ := json.Marshal(model.LanguagePack)
			w.Write(b)
			return
		}
	}
	//if language list still blank then taking the pre-defined language set
	if OJ == "51Nod" {
		model.LanguagePack["1"] = "C"
		model.LanguagePack["2"] = "C 11"
		model.LanguagePack["21"] = "C#"
		model.LanguagePack["11"] = "C++"
		model.LanguagePack["12"] = "C++ 11"
		model.LanguagePack["101"] = "Go"
		model.LanguagePack["71"] = "Haskell"
		model.LanguagePack["31"] = "Java"
		model.LanguagePack["91"] = "Javascript"
		model.LanguagePack["121"] = "Objective C"
		model.LanguagePack["131"] = "Pascal"
		model.LanguagePack["61"] = "Php"
		model.LanguagePack["45"] = "PyPy2"
		model.LanguagePack["46"] = "PyPy3"
		model.LanguagePack["41"] = "Python2"
		model.LanguagePack["42"] = "Python3"
		model.LanguagePack["51"] = "Ruby"
		model.LanguagePack["81"] = "Scala"
		model.LanguagePack["111"] = "Visual C++"
	} else if OJ == "ACdream" {
		model.LanguagePack[""] = ""
	} else if OJ == "Aizu" {
		model.LanguagePack["C"] = "C"
		model.LanguagePack["C#"] = "C#"
		model.LanguagePack["C++"] = "C++"
		model.LanguagePack["C++11"] = "C++11"
		model.LanguagePack["C++14"] = "C++14"
		model.LanguagePack["D"] = "D"
		model.LanguagePack["Go"] = "Go"
		model.LanguagePack["Haskell"] = "Haskell"
		model.LanguagePack["JAVA"] = "JAVA"
		model.LanguagePack["JavaScript"] = "JavaScript"
		model.LanguagePack["Kotlin"] = "Kotlin"
		model.LanguagePack["OCaml"] = "OCaml"
		model.LanguagePack["PHP"] = "PHP"
		model.LanguagePack["Python"] = "Python"
		model.LanguagePack["Python3"] = "Python3"
		model.LanguagePack["Ruby"] = "Ruby"
		model.LanguagePack["Rust"] = "Rust"
		model.LanguagePack["Scala"] = "Scala"
	} else if OJ == "AtCoder" {
		model.LanguagePack["4063"] = "Ada2012 (GNAT 9.2.1)"
		model.LanguagePack["4009"] = "Awk (GNU Awk 4.1.4)"
		model.LanguagePack["4007"] = "Bash (5.0.11)"
		model.LanguagePack["4008"] = "bc (1.07.1)"
		model.LanguagePack["4062"] = "Brainfuck (bf 20041219)"
		model.LanguagePack["4002"] = "C (Clang 10.0.0)"
		model.LanguagePack["4001"] = "C (GCC 9.2.1)"
		model.LanguagePack["4010"] = "C# (.NET Core 3.1.201)"
		model.LanguagePack["4012"] = "C# (Mono-csc 3.5.0)"
		model.LanguagePack["4011"] = "C# (Mono-mcs 6.8.0.105)"
		model.LanguagePack["4004"] = "C++ (Clang 10.0.0)"
		model.LanguagePack["4003"] = "C++ (GCC 9.2.1)"
		model.LanguagePack["4013"] = "Clojure (1.10.1.536)"
		model.LanguagePack["4060"] = "COBOL - Fixed (OpenCOBOL 1.1.0)"
		model.LanguagePack["4061"] = "COBOL - Free (OpenCOBOL 1.1.0)"
		model.LanguagePack["4038"] = "Common Lisp (SBCL 2.0.3)"
		model.LanguagePack["4014"] = "Crystal (0.33.0)"
		model.LanguagePack["4065"] = "Cython (0.29.16)"
		model.LanguagePack["4015"] = "D (DMD 2.091.0)"
		model.LanguagePack["4016"] = "D (GDC 9.2.1)"
		model.LanguagePack["4017"] = "D (LDC 1.20.1)"
		model.LanguagePack["4018"] = "Dart (2.7.2)"
		model.LanguagePack["4035"] = "Dash (0.5.8)"
		model.LanguagePack["4019"] = "dc (1.4.1)"
		model.LanguagePack["4021"] = "Elixir (1.10.2)"
		model.LanguagePack["4020"] = "Erlang (22.3)"
		model.LanguagePack["4022"] = "F# (.NET Core 3.1.201)"
		model.LanguagePack["4023"] = "F# (Mono 10.2.3)"
		model.LanguagePack["4024"] = "Forth (gforth 0.7.3)"
		model.LanguagePack["4025"] = "Fortran (GNU Fortran 9.2.1)"
		model.LanguagePack["4026"] = "Go (1.14.1)"
		model.LanguagePack["4027"] = "Haskell (GHC 8.8.3)"
		model.LanguagePack["4029"] = "Haxe (4.0.3); Java"
		model.LanguagePack["4028"] = "Haxe (4.0.3); js"
		model.LanguagePack["4052"] = "Java (OpenJDK 1.8.0)"
		model.LanguagePack["4005"] = "Java (OpenJDK 11.0.6)"
		model.LanguagePack["4030"] = "JavaScript (Node.js 12.16.1)"
		model.LanguagePack["4031"] = "Julia (1.4.0)"
		model.LanguagePack["4032"] = "Kotlin (1.3.71)"
		model.LanguagePack["4033"] = "Lua (Lua 5.3.5)"
		model.LanguagePack["4034"] = "Lua (LuaJIT 2.1.0)"
		model.LanguagePack["4036"] = "Nim (1.0.6)"
		model.LanguagePack["4037"] = "Objective-C (Clang 10.0.0)"
		model.LanguagePack["4039"] = "OCaml (4.10.0)"
		model.LanguagePack["4040"] = "Octave (5.2.0)"
		model.LanguagePack["4041"] = "Pascal (FPC 3.0.4)"
		model.LanguagePack["4042"] = "Perl (5.26.1)"
		model.LanguagePack["4044"] = "PHP (7.4.4)"
		model.LanguagePack["4045"] = "Prolog (SWI-Prolog 8.0.3)"
		model.LanguagePack["4046"] = "PyPy2 (7.3.0)"
		model.LanguagePack["4047"] = "PyPy3 (7.3.0)"
		model.LanguagePack["4006"] = "Python (3.8.2)"
		model.LanguagePack["4048"] = "Racket (7.6)"
		model.LanguagePack["4043"] = "Raku (Rakudo 2020.02.1)"
		model.LanguagePack["4049"] = "Ruby (2.7.1)"
		model.LanguagePack["4050"] = "Rust (1.42.0)"
		model.LanguagePack["4051"] = "Scala (2.13.1)"
		model.LanguagePack["4053"] = "Scheme (Gauche 0.9.9)"
		model.LanguagePack["4066"] = "Sed (4.4)"
		model.LanguagePack["4054"] = "Standard ML (MLton 20130715)"
		model.LanguagePack["4055"] = "Swift (5.2.1)"
		model.LanguagePack["4056"] = "Text (cat 8.28)"
		model.LanguagePack["4057"] = "TypeScript (3.8)"
		model.LanguagePack["4064"] = "Unlambda (2.0.0)"
		model.LanguagePack["4067"] = "Vim (8.2.0460)"
		model.LanguagePack["4058"] = "Visual Basic (.NET Core 3.1.101)"
		model.LanguagePack["4059"] = "Zsh (5.4.2)"
	} else if OJ == "CodeChef" {
		model.LanguagePack["7"] = "ADA 95(gnat 6.3)"
		model.LanguagePack["13"] = "Assembler(nasm 2.12.01)"
		model.LanguagePack["28"] = "Bash(bash 4.4.5)"
		model.LanguagePack["12"] = "Brainf**k(bff 1.0.6)"
		model.LanguagePack["11"] = "C(gcc 6.3)"
		model.LanguagePack["27"] = "C#(gmcs 4.6.2)"
		model.LanguagePack["44"] = "C++14(gcc 6.3)"
		model.LanguagePack["14"] = "Clips(clips 6.24)"
		model.LanguagePack["111"] = "Clojure(clojure 1.8.0)"
		model.LanguagePack["32"] = "Common Lisp(clisp 2.49)"
		model.LanguagePack["31"] = "Common Lisp(sbcl 1.3.13)"
		model.LanguagePack["20"] = "D(gdc 6.3)"
		model.LanguagePack["36"] = "Erlang(erl 19)"
		model.LanguagePack["124"] = "F#(mono 4.0.0)"
		model.LanguagePack["5"] = "Fortran(gfortran 6.3)"
		model.LanguagePack["114"] = "Go(go 1.7.4)"
		model.LanguagePack["21"] = "Haskell(ghc 8.0.1)"
		model.LanguagePack["16"] = "Icon(iconc 9.5.1)"
		model.LanguagePack["9"] = "Intercal(ick 0.3)"
		model.LanguagePack["10"] = "Java(HotSpot 8u112)"
		model.LanguagePack["56"] = "JavaScript(node 7.4.0)"
		model.LanguagePack["35"] = "JavaScript(rhino 1.7.7)"
		model.LanguagePack["26"] = "Lua(luac 5.3.3)"
		model.LanguagePack["30"] = "Nemerle(ncc 1.2.0)"
		model.LanguagePack["25"] = "Nice(nicec 0.9.13)"
		model.LanguagePack["8"] = "Ocaml(ocamlopt 4.01)"
		model.LanguagePack["22"] = "Pascal(fpc 3.0.0)"
		model.LanguagePack["2"] = "Pascal(gpc 20070904)"
		model.LanguagePack["3"] = "Perl(perl 5.24.1)"
		model.LanguagePack["54"] = "Perl6(perl 6)"
		model.LanguagePack["29"] = "PHP(php 7.1.0)"
		model.LanguagePack["19"] = "Pike(pike 8.0)"
		model.LanguagePack["15"] = "Prolog(swi 7.2.3)"
		model.LanguagePack["109"] = "PyPy 3(PyPy 3.5)"
		model.LanguagePack["99"] = "PyPy(PyPy 2.6.0)"
		model.LanguagePack["4"] = "Python(cpython 2.7.13)"
		model.LanguagePack["116"] = "Python3(python 3.6)"
		model.LanguagePack["17"] = "Ruby(ruby 2.3.3)"
		model.LanguagePack["39"] = "Scala(scala 2.12.1)"
		model.LanguagePack["97"] = "Scheme(chicken 4.11.0)"
		model.LanguagePack["33"] = "Scheme(guile 2.0.13)"
		model.LanguagePack["18"] = "Scheme(stalin 0.3)"
		model.LanguagePack["23"] = "Smalltalk(gst 3.2.5)"
		model.LanguagePack["38"] = "Tcl(tcl 8.6)"
		model.LanguagePack["62"] = "Text(pure text)"
		model.LanguagePack["6"] = "Whitespace(wspace 0.3)"
	} else if OJ == "CodeForces" {
		model.LanguagePack["14"] = "ActiveTcl 8.5"
		model.LanguagePack["33"] = "Ada GNAT 4"
		model.LanguagePack["18"] = "Befunge"
		model.LanguagePack["65"] = "C# 8, .NET Core 3.1"
		model.LanguagePack["9"] = "C# Mono 6.8"
		model.LanguagePack["52"] = "Clang++17 Diagnostics"
		model.LanguagePack["28"] = "D DMD32 v2.091.0"
		model.LanguagePack["3"] = "Delphi 7"
		model.LanguagePack["25"] = "Factor"
		model.LanguagePack["39"] = "FALSE"
		model.LanguagePack["4"] = "Free Pascal 3.0.2"
		model.LanguagePack["45"] = "GNU C++11 5 ZIP"
		model.LanguagePack["42"] = "GNU G++11 5.1.0"
		model.LanguagePack["50"] = "GNU G++14 6.4.0"
		model.LanguagePack["54"] = "GNU G++17 7.3.0"
		model.LanguagePack["61"] = "GNU G++17 9.2.0 (64 bit, msys 2)"
		model.LanguagePack["43"] = "GNU GCC C11 5.1.0"
		model.LanguagePack["32"] = "Go 1.15.2"
		model.LanguagePack["12"] = "Haskell GHC 8.10.1"
		model.LanguagePack["15"] = "Io-2008-01-07 (Win32)"
		model.LanguagePack["47"] = "J"
		model.LanguagePack["36"] = "Java 1.8.0_241"
		model.LanguagePack["60"] = "Java 11.0.6"
		model.LanguagePack["46"] = "Java 8 ZIP"
		model.LanguagePack["34"] = "JavaScript V8 4.8.0"
		model.LanguagePack["48"] = "Kotlin 1.4.0"
		model.LanguagePack["56"] = "Microsoft Q#"
		model.LanguagePack["2"] = "Microsoft Visual C++ 2010"
		model.LanguagePack["59"] = "Microsoft Visual C++ 2017"
		model.LanguagePack["38"] = "Mysterious Language"
		model.LanguagePack["55"] = "Node.js 12.6.3"
		model.LanguagePack["19"] = "OCaml 4.02.1"
		model.LanguagePack["22"] = "OpenCobol 1.0"
		model.LanguagePack["51"] = "PascalABC.NET 3.4.2"
		model.LanguagePack["13"] = "Perl 5.20.1"
		model.LanguagePack["44"] = "Picat 0.9"
		model.LanguagePack["17"] = "Pike 7.8"
		model.LanguagePack["6"] = "PHP 7.2.13"
		model.LanguagePack["40"] = "PyPy 2.7 (7.2.0)"
		model.LanguagePack["41"] = "PyPy 3.6 (7.2.0)"
		model.LanguagePack["7"] = "Python 2.7.15"
		model.LanguagePack["31"] = "Python 3.7.2"
		model.LanguagePack["27"] = "Roco"
		model.LanguagePack["8"] = "Ruby 2.7.1"
		model.LanguagePack["49"] = "Rust 1.42.0"
		model.LanguagePack["20"] = "Scala 2.12.8"
		model.LanguagePack["26"] = "Secret_171"
		model.LanguagePack["57"] = "Text"
		model.LanguagePack["62"] = "UnknownX"
	} else if OJ == "CSU" {
		model.LanguagePack[""] = ""
	} else if OJ == "DimikOJ" {
		model.LanguagePack["1"] = "GNU GCC 5.3.1 C11"
		model.LanguagePack["2"] = "GNU G++ 5.3.1 C++98"
		model.LanguagePack["3"] = "GNU G++ 5.3.1 C++11"
		model.LanguagePack["4"] = "GNU G++ 5.3.1 C++14"
		model.LanguagePack["5"] = "Java 1.8.0_03"
		model.LanguagePack["6"] = "Python 2.7.11"
		model.LanguagePack["7"] = "Python 3.5.1"
	} else if OJ == "EIJudge" {
		model.LanguagePack[""] = ""
	} else if OJ == "EOlymp" {
		model.LanguagePack["csharp"] = "C#"
		model.LanguagePack["gpp"] = "C++"
		model.LanguagePack["go"] = "Go"
		model.LanguagePack["haskell"] = "Haskell"
		model.LanguagePack["java"] = "Java"
		model.LanguagePack["js"] = "JavaScript"
		model.LanguagePack["kotlin"] = "Kotlin"
		model.LanguagePack["fpc"] = "Pascal"
		model.LanguagePack["php"] = "PHP"
		model.LanguagePack["python"] = "Python"
		model.LanguagePack["ruby"] = "Ruby"
		model.LanguagePack["rust"] = "Rust"
	} else if OJ == "FZU" {
		model.LanguagePack["1"] = "GNU C"
		model.LanguagePack["0"] = "GNU C++"
		model.LanguagePack["3"] = "Java"
		model.LanguagePack["2"] = "Pascal"
		model.LanguagePack["5"] = "Visual C"
		model.LanguagePack["4"] = "Visual C++"
	} else if OJ == "Gym" {
		model.LanguagePack["65"] = "C# 8, .NET Core 3.1"
		model.LanguagePack["9"] = "C# Mono 6.8"
		model.LanguagePack["52"] = "Clang++17 Diagnostics"
		model.LanguagePack["28"] = "D DMD32 v2.091.0"
		model.LanguagePack["3"] = "Delphi 7"
		model.LanguagePack["4"] = "Free Pascal 3.0.2"
		model.LanguagePack["42"] = "GNU G++11 5.1.0"
		model.LanguagePack["50"] = "GNU G++14 6.4.0"
		model.LanguagePack["54"] = "GNU G++17 7.3.0"
		model.LanguagePack["61"] = "GNU G++17 9.2.0 (64 bit, msys 2)"
		model.LanguagePack["43"] = "GNU GCC C11 5.1.0"
		model.LanguagePack["32"] = "Go 1.15.2"
		model.LanguagePack["12"] = "Haskell GHC 8.10.1"
		model.LanguagePack["36"] = "Java 1.8.0_241"
		model.LanguagePack["60"] = "Java 11.0.6"
		model.LanguagePack["34"] = "JavaScript V8 4.8.0"
		model.LanguagePack["48"] = "Kotlin 1.4.0"
		model.LanguagePack["2"] = "Microsoft Visual C++ 2010"
		model.LanguagePack["59"] = "Microsoft Visual C++ 2017"
		model.LanguagePack["55"] = "Node.js 12.6.3"
		model.LanguagePack["19"] = "OCaml 4.02.1"
		model.LanguagePack["51"] = "PascalABC.NET 3.4.2"
		model.LanguagePack["13"] = "Perl 5.20.1"
		model.LanguagePack["6"] = "PHP 7.2.13"
		model.LanguagePack["40"] = "PyPy 2.7 (7.2.0)"
		model.LanguagePack["41"] = "PyPy 3.6 (7.2.0)"
		model.LanguagePack["7"] = "Python 2.7.15"
		model.LanguagePack["31"] = "Python 3.7.2"
		model.LanguagePack["8"] = "Ruby 2.7.1"
		model.LanguagePack["49"] = "Rust 1.42.0"
		model.LanguagePack["20"] = "Scala 2.12.8"
	} else if OJ == "HackerRank" {
		model.LanguagePack["ada"] = "ada"
		model.LanguagePack["bash"] = "bash"
		model.LanguagePack["c"] = "c"
		model.LanguagePack["clojure"] = "clojure"
		model.LanguagePack["coffeescript"] = "coffeescript"
		model.LanguagePack["cpp"] = "cpp"
		model.LanguagePack["cpp14"] = "cpp14"
		model.LanguagePack["csharp"] = "csharp"
		model.LanguagePack["d"] = "d"
		model.LanguagePack["elixir"] = "elixir"
		model.LanguagePack["erlang"] = "erlang"
		model.LanguagePack["fortran"] = "fortran"
		model.LanguagePack["fsharp"] = "fsharp"
		model.LanguagePack["go"] = "go"
		model.LanguagePack["groovy"] = "groovy"
		model.LanguagePack["haskell"] = "haskell"
		model.LanguagePack["java"] = "java"
		model.LanguagePack["java8"] = "java8"
		model.LanguagePack["javascript"] = "javascript"
		model.LanguagePack["julia"] = "julia"
		model.LanguagePack["kotlin"] = "kotlin"
		model.LanguagePack["lolcode"] = "lolcode"
		model.LanguagePack["lua"] = "lua"
		model.LanguagePack["objectivec"] = "objectivec"
		model.LanguagePack["ocaml"] = "ocaml"
		model.LanguagePack["octave"] = "octave"
		model.LanguagePack["pascal"] = "pascal"
		model.LanguagePack["perl"] = "perl"
		model.LanguagePack["php"] = "php"
		model.LanguagePack["pypy"] = "pypy"
		model.LanguagePack["pypy3"] = "pypy3"
		model.LanguagePack["python"] = "python"
		model.LanguagePack["python3"] = "python3"
		model.LanguagePack["r"] = "r"
		model.LanguagePack["racket"] = "racket"
		model.LanguagePack["ruby"] = "ruby"
		model.LanguagePack["rust"] = "rust"
		model.LanguagePack["sbcl"] = "sbcl"
		model.LanguagePack["scala"] = "scala"
		model.LanguagePack["smalltalk"] = "smalltalk"
		model.LanguagePack["swift"] = "swift"
		model.LanguagePack["tcl"] = "tcl"
		model.LanguagePack["visualbasic"] = "visualbasic"
		model.LanguagePack["whitespace"] = "whitespace"
	} else if OJ == "HDU" {
		model.LanguagePack["3"] = "C"
		model.LanguagePack["6"] = "C#"
		model.LanguagePack["2"] = "C++"
		model.LanguagePack["0"] = "G++"
		model.LanguagePack["1"] = "GCC"
		model.LanguagePack["5"] = "Java"
		model.LanguagePack["4"] = "Pascal"
	} else if OJ == "HihoCoder" {
		model.LanguagePack["C#"] = "C#"
		model.LanguagePack["G++"] = "G++"
		model.LanguagePack["GCC"] = "GCC"
		model.LanguagePack["Java"] = "Java"
		model.LanguagePack["Python2"] = "Python2"
	} else if OJ == "HIT" {
		model.LanguagePack[""] = ""
	} else if OJ == "HRBUST" {
		model.LanguagePack["2"] = "G++"
		model.LanguagePack["1"] = "GCC"
		model.LanguagePack["7"] = "Haskell"
		model.LanguagePack["3"] = "JAVA"
		model.LanguagePack["4"] = "PHP"
		model.LanguagePack["5"] = "Python2"
	} else if OJ == "HUST" {
		model.LanguagePack[""] = ""
	} else if OJ == "HYSBZ" {
		model.LanguagePack[""] = ""
	} else if OJ == "Kattis" {
		model.LanguagePack["C"] = "C"
		model.LanguagePack["C#"] = "C#"
		model.LanguagePack["C++"] = "C++"
		model.LanguagePack["COBOL"] = "COBOL"
		model.LanguagePack["Common Lisp"] = "Common Lisp"
		model.LanguagePack["F#"] = "F#"
		model.LanguagePack["Go"] = "Go"
		model.LanguagePack["Haskell"] = "Haskell"
		model.LanguagePack["Java"] = "Java"
		model.LanguagePack["JavaScript (Node.js)"] = "JavaScript (Node.js)"
		model.LanguagePack["JavaScript (SpiderMonkey)"] = "JavaScript (SpiderMonkey)"
		model.LanguagePack["Kotlin"] = "Kotlin"
		model.LanguagePack["Objective-C"] = "Objective-C"
		model.LanguagePack["OCaml"] = "OCaml"
		model.LanguagePack["Pascal"] = "Pascal"
		model.LanguagePack["PHP"] = "PHP"
		model.LanguagePack["Prolog"] = "Prolog"
		model.LanguagePack["Python 2"] = "Python 2"
		model.LanguagePack["Python 3"] = "Python 3"
		model.LanguagePack["Ruby"] = "Ruby"
		model.LanguagePack["Rust"] = "Rust"
	} else if OJ == "LibreOJ" {
		model.LanguagePack["c-noilinux"] = "C (NOI) GCC 4.8.4 (NOILinux 1.4.1)"
		model.LanguagePack["c"] = "C Clang 7.0.1"
		model.LanguagePack["csharp"] = "C# Mono 5.16.0.220"
		model.LanguagePack["cpp-noilinux"] = "C++ (NOI) GCC 4.8.4 (NOILinux 1.4.1)"
		model.LanguagePack["cpp11-clang"] = "C++ 11 (Clang) Clang 7.0.1"
		model.LanguagePack["cpp11-noilinux"] = "C++ 11 (NOI) GCC 4.8.4 (NOILinux 1.4.1)"
		model.LanguagePack["cpp11"] = "C++ 11 GCC 8.2.0"
		model.LanguagePack["cpp17-clang"] = "C++ 17 (Clang) Clang 7.0.1"
		model.LanguagePack["cpp17"] = "C++ 17 GCC 8.2.0"
		model.LanguagePack["cpp"] = "C++ GCC 8.2.0"
		model.LanguagePack["haskell"] = "Haskell GHC 8.6.2"
		model.LanguagePack["java"] = "Java OpenJDK 10.0.2"
		model.LanguagePack["nodejs"] = "Node.js 10.14.0"
		model.LanguagePack["pascal"] = "Pascal Free Pascal 3.0.4"
		model.LanguagePack["python2"] = "Python 2 PyPy 6.0.0 (Python 2.7.13)"
		model.LanguagePack["python3"] = "Python 3 PyPy 6.0.0 (Python 3.5.3)"
		model.LanguagePack["ruby"] = "Ruby 2.5.1"
	} else if OJ == "LightOJ" {
		model.LanguagePack["bash"] = "Bash (GNU bash 4.4.20)"
		model.LanguagePack["c"] = "C (gcc 7.5.0)"
		model.LanguagePack["csharp"] = "C# (Mono C# 4.6.2.0)"
		model.LanguagePack["cpp"] = "C++ 11 (g++ 7.5.0)"
		model.LanguagePack["cpp14"] = "C++ 14 (g++ 7.5.0)"
		model.LanguagePack["cpp17"] = "C++ 17 (g++ 7.5.0)"
		model.LanguagePack["clojure"] = "Clojure (Clojure 1.9.0)"
		model.LanguagePack["dart"] = "Dart (Dart SDK 2.10.4)"
		model.LanguagePack["elixir"] = "Elixir (Erlang/OTP 20)"
		model.LanguagePack["erlang"] = "Erlang (Erlang/OTP 20)"
		model.LanguagePack["go"] = "Go (Go 1.10.4)"
		model.LanguagePack["groovy"] = "Groovy (Groovy 2.4.16)"
		model.LanguagePack["haskell"] = "Haskell (Haskell 8.0.2)"
		model.LanguagePack["java"] = "Java 11 (Openjdk 11.0.9.1)"
		model.LanguagePack["javascript"] = "JavaScript (NodeJs 8.10.0)"
		model.LanguagePack["kotlin"] = "Kotlin (Kotlinc-jvm 1.4.21)"
		model.LanguagePack["lisp"] = "Lisp (GNU Clisp 2.49.60)"
		model.LanguagePack["lua"] = "Lua (Lua 5.3.3)"
		model.LanguagePack["objectivec"] = "Objective C (g++ 7.5.0)"
		model.LanguagePack["pascal"] = "Pascal (Free Pascal 3.0.4)"
		model.LanguagePack["perl"] = "Perl (Perl 5.26.1)"
		model.LanguagePack["php"] = "PHP (Php 7.2.24)"
		model.LanguagePack["python3"] = "Python (Python 3.6.9)"
		model.LanguagePack["r"] = "R (Rscript 3.4.4)"
		model.LanguagePack["ruby"] = "Ruby (Ruby 2.5.1)"
		model.LanguagePack["rust"] = "Rust (Rust 1.43.0)"
		model.LanguagePack["scala"] = "Scala (Scala 2.11.12)"
		model.LanguagePack["sql"] = "Sql (SQL Lite 3.22.0)"
		model.LanguagePack["swift"] = "Swift (Swift 5.3.2)"
		model.LanguagePack["visualbasic"] = "Visual Basic (VB.net 0.0.0.5943)"
	} else if OJ == "Minieye" {
		model.LanguagePack[""] = ""
	} else if OJ == "NBUT" {
		model.LanguagePack["4"] = "FPC"
		model.LanguagePack["2"] = "G++"
		model.LanguagePack["1"] = "GCC"
	} else if OJ == "OpenJ_Bailian" {
		model.LanguagePack["C#"] = "C#(mono4.2)"
		model.LanguagePack["G++"] = "G++(5.3)"
		model.LanguagePack["GCC"] = "GCC(5.3)"
		model.LanguagePack["Java"] = "Java(OpenJDK9)"
		model.LanguagePack["Pascal"] = "Pascal(FreePascal)"
		model.LanguagePack["Python2"] = "Python2(2.7)"
		model.LanguagePack["Python3"] = "Python3(3.5)"
		model.LanguagePack["Racket"] = "Racket(6.5)"
	} else if OJ == "OpenJ_POJ" {
		model.LanguagePack["G++"] = "G++(5.3)"
		model.LanguagePack["GCC"] = "GCC(5.3)"
		model.LanguagePack["Java"] = "Java(OpenJDK9)"
		model.LanguagePack["Pascal"] = "Pascal(FreePascal)"
	} else if OJ == "POJ" {
		model.LanguagePack["5"] = "C"
		model.LanguagePack["4"] = "C++"
		model.LanguagePack["6"] = "Fortran"
		model.LanguagePack["0"] = "G++"
		model.LanguagePack["1"] = "GCC"
		model.LanguagePack["2"] = "Java"
		model.LanguagePack["3"] = "Pascal"
	} else if OJ == "SCU" {
		model.LanguagePack["C"] = "C"
		model.LanguagePack["C++"] = "C++"
		model.LanguagePack["Java"] = "Java"
		model.LanguagePack["Pascal"] = "Pascal"
	} else if OJ == "SGU" {
		model.LanguagePack["65"] = "C# 8, .NET Core 3.1"
		model.LanguagePack["9"] = "C# Mono 6.8"
		model.LanguagePack["52"] = "Clang++17 Diagnostics"
		model.LanguagePack["28"] = "D DMD32 v2.091.0"
		model.LanguagePack["3"] = "Delphi 7"
		model.LanguagePack["4"] = "Free Pascal 3.0.2"
		model.LanguagePack["42"] = "GNU G++11 5.1.0"
		model.LanguagePack["50"] = "GNU G++14 6.4.0"
		model.LanguagePack["54"] = "GNU G++17 7.3.0"
		model.LanguagePack["61"] = "GNU G++17 9.2.0 (64 bit, msys 2)"
		model.LanguagePack["43"] = "GNU GCC C11 5.1.0"
		model.LanguagePack["32"] = "Go 1.15.2"
		model.LanguagePack["12"] = "Haskell GHC 8.10.1"
		model.LanguagePack["36"] = "Java 1.8.0_241"
		model.LanguagePack["60"] = "Java 11.0.6"
		model.LanguagePack["34"] = "JavaScript V8 4.8.0"
		model.LanguagePack["48"] = "Kotlin 1.4.0"
		model.LanguagePack["2"] = "Microsoft Visual C++ 2010"
		model.LanguagePack["59"] = "Microsoft Visual C++ 2017"
		model.LanguagePack["55"] = "Node.js 12.6.3"
		model.LanguagePack["19"] = "OCaml 4.02.1"
		model.LanguagePack["51"] = "PascalABC.NET 3.4.2"
		model.LanguagePack["13"] = "Perl 5.20.1"
		model.LanguagePack["6"] = "PHP 7.2.13"
		model.LanguagePack["40"] = "PyPy 2.7 (7.2.0)"
		model.LanguagePack["41"] = "PyPy 3.6 (7.2.0)"
		model.LanguagePack["7"] = "Python 2.7.15"
		model.LanguagePack["31"] = "Python 3.7.2"
		model.LanguagePack["8"] = "Ruby 2.7.1"
		model.LanguagePack["49"] = "Rust 1.42.0"
		model.LanguagePack["20"] = "Scala 2.12.8"
	} else if OJ == "SPOJ" {
		model.LanguagePack["7"] = "Ada95 (gnat 8.3)"
		model.LanguagePack["45"] = "Assembler 32 (gcc 8.3)"
		model.LanguagePack["13"] = "Assembler 32 (nasm 2.14)"
		model.LanguagePack["42"] = "Assembler 64 (nasm 2.14)"
		model.LanguagePack["104"] = "AWK (gawk 4.2.1)"
		model.LanguagePack["105"] = "AWK (mawk 1.3.3)"
		model.LanguagePack["28"] = "Bash (bash 5.0.3)"
		model.LanguagePack["110"] = "BC (bc 1.07.1)"
		model.LanguagePack["12"] = "Brainf**k (bff 1.0.6)"
		model.LanguagePack["81"] = "C (clang 8.0)"
		model.LanguagePack["11"] = "C (gcc 8.3)"
		model.LanguagePack["27"] = "C# (gmcs 5.20.1)"
		model.LanguagePack["41"] = "C++ (g++ 4.3.2)"
		model.LanguagePack["1"] = "C++ (gcc 8.3)"
		model.LanguagePack["82"] = "C++14 (clang 8.0)"
		model.LanguagePack["44"] = "C++14 (gcc 8.3)"
		model.LanguagePack["34"] = "C99 (gcc 8.3)"
		model.LanguagePack["14"] = "Clips (clips 6.30)"
		model.LanguagePack["111"] = "Clojure (clojure 1.10.0)"
		model.LanguagePack["118"] = "Cobol (gnucobol 2.2.0)"
		model.LanguagePack["91"] = "CoffeeScript (coffee 2.4.1)"
		model.LanguagePack["32"] = "Common Lisp (clisp 2.49.92)"
		model.LanguagePack["31"] = "Common Lisp (sbcl 1.4.16)"
		model.LanguagePack["102"] = "D (dmd 2.085.0)"
		model.LanguagePack["20"] = "D (gdc 8.3)"
		model.LanguagePack["84"] = "D (ldc 1.12.0)"
		model.LanguagePack["48"] = "Dart (dart 2.3.0)"
		model.LanguagePack["96"] = "Elixir (elixir 1.8.2)"
		model.LanguagePack["36"] = "Erlang (erl 21.3.8)"
		model.LanguagePack["124"] = "F# (mono 4.1)"
		model.LanguagePack["92"] = "Fantom (fantom 1.0.72)"
		model.LanguagePack["107"] = "Forth (gforth 0.7.3)"
		model.LanguagePack["5"] = "Fortran (gfortran 8.3)"
		model.LanguagePack["114"] = "Go (go 1.12.1)"
		model.LanguagePack["98"] = "Gosu (gosu 1.14.9)"
		model.LanguagePack["121"] = "Groovy (groovy 2.5.6)"
		model.LanguagePack["21"] = "Haskell (ghc 8.4.4)"
		model.LanguagePack["16"] = "Icon (iconc 9.5.1)"
		model.LanguagePack["9"] = "Intercal (ick 0.3)"
		model.LanguagePack["24"] = "JAR (JavaSE 6)"
		model.LanguagePack["10"] = "Java (HotSpot 12)"
		model.LanguagePack["35"] = "JavaScript (rhino 1.7.9)"
		model.LanguagePack["112"] = "JavaScript (SMonkey 60.2.3)"
		model.LanguagePack["47"] = "Kotlin (kotlin 1.3.21)"
		model.LanguagePack["26"] = "Lua (luac 5.3.3)"
		model.LanguagePack["30"] = "Nemerle (ncc 1.2.547)"
		model.LanguagePack["25"] = "Nice (nicec 0.9.13)"
		model.LanguagePack["122"] = "Nim (nim 0.19.4)"
		model.LanguagePack["56"] = "Node.js (node 11.12.0)"
		model.LanguagePack["83"] = "Objective-C (clang 8.0)"
		model.LanguagePack["43"] = "Objective-C (gcc 8.3)"
		model.LanguagePack["8"] = "Ocaml (ocamlopt 4.05.0)"
		model.LanguagePack["127"] = "Octave (octave 4.4.1)"
		model.LanguagePack["22"] = "Pascal (fpc 3.0.4)"
		model.LanguagePack["2"] = "Pascal (gpc 20070904)"
		model.LanguagePack["54"] = "Perl (perl 2018.12)"
		model.LanguagePack["3"] = "Perl (perl 5.28.1)"
		model.LanguagePack["29"] = "PHP (php 7.3.5)"
		model.LanguagePack["94"] = "Pico Lisp (pico 18.12.27)"
		model.LanguagePack["19"] = "Pike (pike 8.0)"
		model.LanguagePack["108"] = "Prolog (gprolog 1.4.5)"
		model.LanguagePack["15"] = "Prolog (swi 7.6.4)"
		model.LanguagePack["4"] = "Python (cpython 2.7.16)"
		model.LanguagePack["99"] = "Python (PyPy 2.7.13)"
		model.LanguagePack["116"] = "Python 3 (python 3.7.3)"
		model.LanguagePack["126"] = "Python 3 nbc (python 3.7.3)"
		model.LanguagePack["117"] = "R (R 3.5.2)"
		model.LanguagePack["95"] = "Racket (racket 7.0)"
		model.LanguagePack["17"] = "Ruby (ruby 2.5.5)"
		model.LanguagePack["93"] = "Rust (rust 1.33.0)"
		model.LanguagePack["39"] = "Scala (scala 2.12.8)"
		model.LanguagePack["97"] = "Scheme (chicken 4.13)"
		model.LanguagePack["33"] = "Scheme (guile 2.2.4)"
		model.LanguagePack["18"] = "Scheme (stalin 0.11)"
		model.LanguagePack["46"] = "Sed (sed 4.7)"
		model.LanguagePack["23"] = "Smalltalk (gst 3.2.5)"
		model.LanguagePack["40"] = "SQLite (sqlite 3.27.2)"
		model.LanguagePack["85"] = "Swift (swift 4.2.2)"
		model.LanguagePack["38"] = "TCL (tcl 8.6)"
		model.LanguagePack["62"] = "Text (plain text)"
		model.LanguagePack["115"] = "Unlambda (unlambda 0.1.4.2)"
		model.LanguagePack["50"] = "VB.net (mono 4.7)"
		model.LanguagePack["6"] = "Whitespace (wspace 0.3)"
	} else if OJ == "TopCoder" {
		model.LanguagePack["4"] = "C#"
		model.LanguagePack["3"] = "C++"
		model.LanguagePack["1"] = "Java"
		model.LanguagePack["6"] = "Python"
		model.LanguagePack["5"] = "VB"
	} else if OJ == "Toph" {
		model.LanguagePack["5d8289da9d55050001e97eae"] = "Bash 5.0"
		model.LanguagePack["5d8211eb728b11000151faf5"] = "Brainf*ck"
		model.LanguagePack["5d8280551335cb000138ba63"] = "C# Mono 6.0"
		model.LanguagePack["5d84f038f10beb00010af77c"] = "C++11 GCC 7.4"
		model.LanguagePack["5d84ef3ef10beb00010af742"] = "C++14 GCC 8.3"
		model.LanguagePack["5d828f1e9d55050001e97ee4"] = "C++17 GCC 9.2"
		model.LanguagePack["5d832d5e1335cb000138bd1f"] = "C11 GCC 9.2"
		model.LanguagePack["5eae739b36ac0000016688bd"] = "Common Lisp SBCL 2.0"
		model.LanguagePack["5e85f3d7e2613b000165fc33"] = "Erlang 22.3"
		model.LanguagePack["5d821a8bf2eba50001686581"] = "Free Pascal 3.0"
		model.LanguagePack["55c9ab8c421aa961d1000007"] = "Go 1.13"
		model.LanguagePack["5d832a4f1335cb000138bd08"] = "Haskell 8.6"
		model.LanguagePack["58483d7504469e2585024395"] = "Java 1.8"
		model.LanguagePack["59ca12114ad24000017dcaf9"] = "Kotlin 1.1"
		model.LanguagePack["5d832ccd1335cb000138bd19"] = "Node.js 10.16"
		model.LanguagePack["5d822463728b11000151fbc9"] = "Perl 5.30"
		model.LanguagePack["5d8334c31335cb000138bd5c"] = "PHP 7.2"
		model.LanguagePack["55c9a240421aa9479c000010"] = "PyPy 7.1 (2.7)"
		model.LanguagePack["55c9a6a6421aa961d1000003"] = "PyPy 7.1 (3.6)"
		model.LanguagePack["58482b5504469e2585024320"] = "Python 2.7"
		model.LanguagePack["58482c1804469e2585024324"] = "Python 3.7"
		model.LanguagePack["5f4793f146e836000119165f"] = "Python 3.8"
		model.LanguagePack["5848505704469e258502445b"] = "Ruby 2.6"
		model.LanguagePack["5f6aeccae1863f0001267dc8"] = "Swift 5.3"
		model.LanguagePack["5eeb7c1c67d6530001de8e47"] = "Whitespace"
	} else if OJ == "UESTC" {
		model.LanguagePack[""] = ""
	} else if OJ == "UESTC_old" {
		model.LanguagePack[""] = ""
	} else if OJ == "UniversalOJ" {
		model.LanguagePack["C"] = "C"
		model.LanguagePack["C++"] = "C++"
		model.LanguagePack["C++11"] = "C++11"
		model.LanguagePack["Java7"] = "Java7"
		model.LanguagePack["Java8"] = "Java8"
		model.LanguagePack["Pascal"] = "Pascal"
		model.LanguagePack["Python2.7"] = "Python2.7"
		model.LanguagePack["Python3"] = "Python3"
	} else if OJ == "URAL" {
		model.LanguagePack["69"] = "Clang++ 10 x64"
		model.LanguagePack["31"] = "FreePascal 2.6"
		model.LanguagePack["68"] = "G++ 9.2 x64"
		model.LanguagePack["67"] = "GCC 9.2 x64"
		model.LanguagePack["58"] = "Go 1.14 x64"
		model.LanguagePack["19"] = "Haskell 7.6"
		model.LanguagePack["32"] = "Java 1.8"
		model.LanguagePack["60"] = "Kotlin 1.4.0"
		model.LanguagePack["57"] = "Python 3.8 x64"
		model.LanguagePack["18"] = "Ruby 1.9"
		model.LanguagePack["59"] = "Rust 1.45 x64"
		model.LanguagePack["33"] = "Scala 2.11"
		model.LanguagePack["63"] = "Visual C 2019"
		model.LanguagePack["65"] = "Visual C 2019 x64"
		model.LanguagePack["61"] = "Visual C# 2019"
		model.LanguagePack["64"] = "Visual C++ 2019"
		model.LanguagePack["66"] = "Visual C++ 2019 x64"
	} else if OJ == "URI" {
		model.LanguagePack["1"] = "C (gcc  4.8.5)"
		model.LanguagePack["7"] = "C# (mono 5.10.1.20)"
		model.LanguagePack["2"] = "C++ (g++ 4.8.5)"
		model.LanguagePack["16"] = "C++17 (g++ 7.3.0)"
		model.LanguagePack["14"] = "C99 (gcc  4.8.5)"
		model.LanguagePack["22"] = "Dart (dart 2.9)"
		model.LanguagePack["12"] = "Go (go 1.8.1)"
		model.LanguagePack["17"] = "Haskell (ghc 7.6.3)"
		model.LanguagePack["3"] = "Java (OpenJDK 1.7.0)"
		model.LanguagePack["21"] = "Java 14 (OpenJDK 1.14.0)"
		model.LanguagePack["11"] = "Java 8 (OpenJDK 1.8.0)"
		model.LanguagePack["10"] = "JavaScript (nodejs 8.4.0)"
		model.LanguagePack["15"] = "Kotlin (1.2.10)"
		model.LanguagePack["9"] = "Lua (lua 5.2.3)"
		model.LanguagePack["18"] = "OCaml (ocamlc 4.01.0)"
		model.LanguagePack["19"] = "Pascal (fpc 2.6.2)"
		model.LanguagePack["24"] = "PHP (7.4.3)"
		//model.LanguagePack["13"] = "PostgreSQL (psql 9.4.19)"
		model.LanguagePack["4"] = "Python (Python 2.7.6)"
		model.LanguagePack["5"] = "Python 3 (Python 3.4.3)"
		model.LanguagePack["20"] = "Python 3.8 (Python 3.8.2)"
		model.LanguagePack["23"] = "R (Rscript 4.0.2)"
		model.LanguagePack["6"] = "Ruby (ruby 2.3.0)"
		model.LanguagePack["8"] = "Scala (scalac 2.11.8)"
	} else if OJ == "UVA" {
		model.LanguagePack["1"] = "ANSI C 5.3.0"
		model.LanguagePack["3"] = "C++ 5.3.0"
		model.LanguagePack["5"] = "C++11 5.3.0"
		model.LanguagePack["2"] = "JAVA 1.8.0"
		model.LanguagePack["4"] = "PASCAL 3.0.0"
		model.LanguagePack["6"] = "PYTH3 3.5.1"
	} else if OJ == "UVALive" {
		model.LanguagePack["1"] = "ANSI C 5.3.0"
		model.LanguagePack["3"] = "C++ 5.3.0"
		model.LanguagePack["5"] = "C++11 5.3.0"
		model.LanguagePack["2"] = "JAVA 1.8.0"
		model.LanguagePack["4"] = "PASCAL 3.0.0"
		model.LanguagePack["6"] = "PYTH3 3.5.1"
	} else if OJ == "Z_trening" {
		model.LanguagePack[""] = ""
	} else if OJ == "ZOJ" {
		model.LanguagePack["GCC"] = "C (gcc 4.7.2)"
		model.LanguagePack["GXX"] = "C++ (g++ 6.4.0)"
		model.LanguagePack["JAVAC"] = "Java (java 1.8.0)"
		model.LanguagePack["PYTHON2"] = "Python (python 2.7.12)"
		model.LanguagePack["PYTHON3"] = "Python (python 3.6.5)"
	} else if OJ == "计蒜客" {
		model.LanguagePack["c"] = "C"
		model.LanguagePack["c_noi"] = "C (NOI)"
		model.LanguagePack["c++_noi"] = "C++ (NOI)"
		model.LanguagePack["c++"] = "C++11"
		model.LanguagePack["c++14"] = "C++14"
		model.LanguagePack["go"] = "Go"
		model.LanguagePack["java"] = "Java"
		model.LanguagePack["octave"] = "Octave"
		model.LanguagePack["pascal"] = "Pascal"
		model.LanguagePack["python"] = "Python 2.7"
		model.LanguagePack["python3"] = "Python 3.5"
		model.LanguagePack["ruby"] = "Ruby"
	} else if OJ == "黑暗爆炸" {
		model.LanguagePack["C"] = "C"
		model.LanguagePack["C++"] = "C++"
		model.LanguagePack["C++11"] = "C++11"
		model.LanguagePack["Java7"] = "Java7"
		model.LanguagePack["Java8"] = "Java8"
		model.LanguagePack["Pascal"] = "Pascal"
		model.LanguagePack["Python2.7"] = "Python2.7"
		model.LanguagePack["Python3"] = "Python3"
	}
	w.Header().Set("Content-Type", "application/json")
	b, _ := json.Marshal(model.LanguagePack)
	w.Write(b)
}
